<?php

/*namespace Foobar;

class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}

spl_autoload_register(__NAMESPACE__ .'\Foo::test'); // Depuis PHP 5.3.0

new InexistentClass;



	/**
	 * Autoload de secours
	 */

/*	 function autoload($class) {
		$class = ltrim($class, '\\');
		$fileName  = '';
		$namespace = '';
	 
		if ($lastNsPos = strripos($class, '\\')) {
			$namespace = substr($class, 0, $lastNsPos);
			$class = substr($class, $lastNsPos + 1);
			$fileName  = str_replace('\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;
		}
	 
		$fileName .= str_replace('_', DIRECTORY_SEPARATOR, $class) . '.php';
		$fileName = strtolower(substr($fileName, 8)); 
		// 8 ici correspond à la longueur de mon namespace principal (Par exemple : Foo\Bar\Test, la valeur vaudra la longueur de 'Foo\', donc 4
	 
		require_once '../' . $fileName;
	}
	*/
	
	
// autoload_psr4.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);
echo $vendorDir;
echo "<br>";
echo $baseDir;
/*return array(
    '' => array($baseDir . '/app'),
);*/